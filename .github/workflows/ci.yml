name: CI

on:
  push:
  pull_request:

env:
  JDK_VERSION: "17"
  NODE_VERSION: "12.x"

jobs:
  # Build package
  build:
    name: Build zest-writer
    runs-on: ${{ matrix.OS }}
    strategy:
      matrix:
        include:
          - OS: ubuntu-22.04
            TARGET: deb
          - OS: ubuntu-22.04
            TARGET: rpm
          - OS: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up NodeJS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: 'Set up latest Oracle JDK 17'
        uses: oracle-actions/setup-java@v1
        with:
          website: oracle.com
          release: "${{ env.JDK_VERSION }}"

      - name: Download JDK 14 for Linux
        run: curl "https://download.java.net/java/GA/jdk14.0.2/205943a0976c4ed48cb16f1043c5c647/12/GPL/openjdk-14.0.2_linux-x64_bin.tar.gz" --output openjdk-14.0.2.tar.gz
        if: runner.os == 'Linux'

      - name: Download JDK 14 for OsX
        run: curl "https://download.java.net/java/GA/jdk14.0.2/205943a0976c4ed48cb16f1043c5c647/12/GPL/openjdk-14.0.2_osx-x64_bin.tar.gz" --output openjdk-14.0.2.tar.gz
        if: runner.os == 'macOS'

      - name: Download JDK 14
        run: tar -xf openjdk-14.0.2.tar.gz

      - name: Export BADASS_JLINK_JPACKAGE_HOME
        run: export BADASS_JLINK_JPACKAGE_HOME="$GITHUB_WORKSPACE/jdk-14.0.2"
        if: runner.os == 'Linux'

      - name: Export BADASS_JLINK_JPACKAGE_HOME
        run: export BADASS_JLINK_JPACKAGE_HOME="$GITHUB_WORKSPACE/jdk-14.0.2.jdk/Contents/Home"
        if: runner.os == 'macOS'

      - name: Build zmd
        run: cd scripts && ./build-zmd.sh && cd ..

      - name: Build assets
        run: cd scripts && ./build-css.sh && cd ..

      - name: Build package for Linux
        run: ./gradlew jpackage -PlinuxTarget=$TARGET
        if: runner.os == 'Linux'

      - name: Build package for macOs
        run: ./gradlew jpackage
        if: runner.os == 'macOS'

      - uses: xresloader/upload-to-github-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "build/installer/*.deb"
          delete_file: "*zestwriter*.deb"
          overwrite: true
          branches: "new_build"
          verbose: true
          prerelease: true
        if: ${{ (runner.os == 'Linux') && matrix.TARGET == 'deb'}}