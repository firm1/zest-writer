plugins {
    id "java"
    id "jacoco"
    id "com.github.kt3k.coveralls" version "2.6.3"
    id "com.eriwen.gradle.css" version "2.12.0"
}

apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/8.1.1/javafx.plugin"

processResources {
    filesMatching('config.properties') {
        expand(project.properties)
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Configures plugin
javafx {
    // Application name and ID presented by target OS
    appID 'ZestWriter'
    appName 'ZestWriter'
    mainClass 'com.zestedesavoir.zestwriter.MainApp'

    // JVM arguments, system properties, application command line arguments
    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
    systemProperties = ['prism.disableRegionCaching': 'true']
    arguments = []

    // informations
    category = "Office"
    copyright = "Copyright (c) 2016 Zest Writer"
    description = "This is a Markdown Editor for Zeste de Savoir contents"
    licenseType = "GPLv3"
    vendor = "firm1"
    installSystemWide = true
    menu = false

    // app icons
    icons {
        shortcut = ["src/main/resources/logo/logo-16.png", "src/main/resources/logo/logo-32.png", "src/main/resources/logo/logo-128.png", "src/main/resources/logo/logo-256.png", "src/main/resources/logo/logo-16@2x.png", "src/main/resources/logo/logo-32@2x.png", "src/main/resources/logo/logo-128@2x.png"]
        volume = 'src/main/resources/logo/logo-128.png'
        setup = 'src/main/resources/logo/logo-128.png'
    }

    // Keystore credentials for signing JAR
    // Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048

    releaseKey {
        alias = "release"
        keyStore = file('keys/keystore.jks')
    }
    signingMode 'release'
}

String getProjectProperty(String propertyName) {
    project.hasProperty(propertyName) ? project.property(propertyName) : null
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/firm1/maven"
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            exclude '*.pyc'
        }
    }
    test {
        java {
            srcDirs = ['src/test/java', 'src/integrationTest/java']
        }
        resources {
            srcDirs = ['src/test/resources', 'src/integrationTest/resources']
            exclude 'src/test/resources/log4j.properties'
        }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File',
                'Implementation-Version': version,
                'Main-Class': 'com.zestedesavoir.zestwriter.MainApp'
    }
    baseName = project.name + '-all'
    zip64 = true
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

minifyCss {
    source = "${sourceSets.main.resources.srcDirs.first()}/com/zestedesavoir/zestwriter/css/content.css"
    dest = "${sourceSets.main.output.resourcesDir}/com/zestedesavoir/zestwriter/css/content.css"
    yuicompressor { // Optional
        lineBreakPos = -1
    }
}

tasks.cssToBin.dependsOn tasks.minifyCss
tasks.minifyCss.dependsOn tasks.processResources

dependencies {
    compile group: 'org.languagetool', name: 'language-fr', version: '3.4'

    // Junit dependency need to be sync with testfx library. Check https://github.com/TestFX/TestFX for more information.
    testCompile "junit:junit:4.10"

    // Library for integration testing for JavaFX.
    testCompile "org.testfx:testfx-core:4.0.+"
    testCompile "org.testfx:testfx-legacy:4.0.+", {
        exclude group: "junit", module: "junit"
    }

    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.2'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.5'
    compile group: 'de.julielab', name: 'aliasi-lingpipe', version: '4.1.0'
    compile group: 'org.python', name: 'jython-standalone', version: '2.7.1b3'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.9.2'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'
    compile group: 'de.jensd', name: 'fontawesomefx', version: '8.9'
    compile group: 'org.zeroturnaround', name: 'zt-zip', version: '1.9'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.10'
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.6.10'
    compile group: 'com.zestedesavoir.zmarkdown', name: 'java-zmarkdown', version: '2.6.1'
}

test {
    filter {
        includeTestsMatching "*Test*"
    }

    systemProperty "zw.username", System.getProperty("zw.username")
    systemProperty "zw.password", System.getProperty("zw.password")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/view/**',
                              '**/MainApp**',
                              '**/task/**'])
        })
    }
}

tasks.check.dependsOn jacocoTestReport

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}
apply plugin: 'java'