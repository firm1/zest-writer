plugins {
    id "java"
    id "com.eriwen.gradle.css" version "2.12.0"
}

apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/8.1.1/javafx.plugin"

processResources {
    filesMatching('config.properties') {
        expand(project.properties)
    }
}

// Configures plugin
javafx {
    // Application name and ID presented by target OS
    appID 'ZestWriter'
    appName 'ZestWriter'
    mainClass 'com.zestedesavoir.zestwriter.MainApp'

    // JVM arguments, system properties, application command line arguments
    jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
    systemProperties = ['prism.disableRegionCaching': 'true']
    arguments = []

    // informations |  grep eclipse
    category = "Editor"
    copyright = "Copyright (c) 2016 Zest Writer"
    description = "This is a Markdown Editor for Zeste de Savoir contents"
    licenseType = "Apache 2.0"
    vendor = "firm1"
    installSystemWide = true
    menu = true

    // app icons
    icons {
        shortcut = ["src/main/resources/logo/logo-16.png", "src/main/resources/logo/logo-32.png", "src/main/resources/logo/logo-128.png", "src/main/resources/logo/logo-256.png", "src/main/resources/logo/logo-16@2x.png", "src/main/resources/logo/logo-32@2x.png", "src/main/resources/logo/logo-128@2x.png"]
        volume = 'src/main/resources/logo/logo-128.png'
        setup = 'src/main/resources/logo/logo-128.png'
    }

    // Keystore credentials for signing JAR
    // Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048

    releaseKey {
        alias = "release"
        keyStore = file('keys/keystore.jks')
    }
    signingMode 'release'
}

String getProjectProperty(String propertyName) {
    project.hasProperty(propertyName) ? project.property(propertyName) : null
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            exclude '*.pyc'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
            exclude 'src/test/resources/log4j.properties'
        }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File',
            'Implementation-Version': version,
            'Main-Class': 'com.zestedesavoir.zestwriter.MainApp'
    }
    baseName = project.name + '-all'
    zip64 = true
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

minifyCss {
    source = "${sourceSets.main.resources.srcDirs.first()}/com/zestedesavoir/zestwriter/css/content.css"
    dest = "${sourceSets.main.output.resourcesDir}/com/zestedesavoir/zestwriter/css/content.css"
    yuicompressor { // Optional
        lineBreakPos = -1
    }
}

tasks.cssToBin.dependsOn tasks.minifyCss
tasks.minifyCss.dependsOn tasks.processResources

dependencies {
    testCompile 'junit:junit:4.12'
    compile 'org.languagetool:language-fr:3.3',
            'org.apache.httpcomponents:httpclient:4.5.1',
            'org.apache.httpcomponents:httpcore:4.4.3',
            'org.apache.httpcomponents:fluent-hc:4.5.1',
            'org.apache.httpcomponents:httpmime:4.5.1',
            'org.apache.httpcomponents:httpclient-cache:4.5.1',
            'org.apache.httpcomponents:httpclient-win:4.5.1',
            'com.fasterxml.jackson.core:jackson-databind:2.7.3',
            'de.julielab:aliasi-lingpipe:4.1.0',
            'org.python:jython-standalone:2.7.1b3',
            'org.jsoup:jsoup:1.8.1',
            'org.slf4j:slf4j-api:1.7.21',
            'org.slf4j:slf4j-log4j12:1.7.21',
            'org.fxmisc.richtext:richtextfx:0.6.10',
            'de.jensd:fontawesomefx:8.9',
            'org.zeroturnaround:zt-zip:1.9',
            'org.controlsfx:controlsfx:8.40.10'
}

test {
    filter {
        includeTestsMatching "*Test*"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.8'
}
